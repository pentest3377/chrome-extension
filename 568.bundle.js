"use strict";(self.webpackChunktab_nodes_tree_extension=self.webpackChunktab_nodes_tree_extension||[]).push([[568],{79868:(e,t,r)=>{r.d(t,{i3:()=>n,yp:()=>o,z2:()=>a});let a=function(e){return e.NextAtRootLevel="NextAtRootLevel",e.SameLevelSibling="SameLevelSibling",e.AsFirstChild="AsFirstChild",e.AsLastChild="AsLastChild",e}({}),n=function(e){return e.AsFirstChild="AsFirstChild",e.AsLastChild="AsLastChild",e}({}),o=function(e){return e.AsFirstChild="AsFirstChild",e.AsLastChild="AsLastChild",e}({})},94475:(e,t,r)=>{r.d(t,{S:()=>b});var a=r(62567),n=r(87521),o=r(87855),i=r(93034),s=r(24817),d=r(92935),l=r.n(d),c=r(79868),u=r(65343),g=r(68687);let h=(0,i.tZ)(!0,i.W4.action,b.name);async function b(e,t,r){let i={url:e};switch(r.nodeType){case"tabNode":if(r.pinned)i=Object.assign(Object.assign({},i),{index:r.index+1});else switch(t){case c.z2.SameLevelSibling:i=Object.assign(Object.assign({},i),{openerTabId:r.id,index:(0,s.nJ)(r)});break;case c.z2.AsFirstChild:i=Object.assign(Object.assign({},i),{openerTabId:r.id,index:r.index+1});break;case c.z2.AsLastChild:i=Object.assign(Object.assign({},i),{openerTabId:r.id,index:(0,s.nJ)(r)});break;case c.z2.NextAtRootLevel:i=Object.assign(Object.assign({},i),{openerTabId:r.id,index:(0,s.Z0)(r,n.store.nodesTree.nodes)})}break;case"groupNode":switch(t){case c.z2.AsFirstChild:let d=(0,s.um)(r,n.store.nodesTree.nodes);if(!d){h.error("Cannot find the first child tab node of the group node.");return}i=Object.assign(Object.assign({},i),{index:d.index});break;case c.z2.AsLastChild:let b=(0,s.IB)(r,n.store.nodesTree.nodes);if(!b){h.error("Cannot find the last child tab node of the group node.");return}i=Object.assign(Object.assign({},i),{index:b.index+1});break;case c.z2.SameLevelSibling:case c.z2.NextAtRootLevel:return}}n.store.chromeEventListeners.toggleAllListeners(!1),h.gP("create new tab",{openerNode:r,position:t,createTabProperties:i});try{let e,d;switch(r.nodeType){case"tabNode":if((0,s.y7)(r)){if(h.log('Opener tab is in a group. To avoid "Saved groups are not editable." error when creating a tab with index. We create a tab without index first, then add to the group and move to the right index.',i),e=await chrome.tabs.create(l().pick(i,"url","openerTabId")),h.log("New tab created",e),!e.id)return;await chrome.tabs.group({tabIds:e.id,groupId:r.groupId}),i.index&&await chrome.tabs.move(e.id,{index:i.index})}else{if(e=await chrome.tabs.create(i),h.log("New tab created",e),!e.id)return;e.groupId!==r.groupId&&(h.log("Add to group.",{tabId:e.id,openerNodeGroupId:r.groupId}),await chrome.tabs.group({tabIds:e.id,groupId:r.groupId}))}if(r.pinned)d={oldNodes:n.store.nodesTree.nodes,fixMissingParents:!1};else{let a=(0,g.WB)(n.store.nodesTree.nodes,r,!0);switch(t){case c.z2.SameLevelSibling:d={oldNodes:a,fixMissingParents:!1,nodesWithNewProperties:{[e.id]:{ancestralNodeIds:(0,u.c)(r,{includeOpenerTabNode:!1})}}};break;case c.z2.AsFirstChild:case c.z2.AsLastChild:d={oldNodes:a,fixMissingParents:!1,nodesWithNewProperties:{[e.id]:{ancestralNodeIds:(0,u.c)(r,{includeOpenerTabNode:!0})}}};break;case c.z2.NextAtRootLevel:d={oldNodes:a,fixMissingParents:!1}}}break;case"groupNode":if(e=await chrome.tabs.create(i),h.log("New tab created",e),!e.id)return;switch(e.groupId!==r.id&&(h.log("Add to group.",{tabId:e.id,openerNodeGroupId:r.id}),await chrome.tabs.group({tabIds:e.id,groupId:r.id})),d={oldNodes:(0,g.WB)(n.store.nodesTree.nodes,r,!0),fixMissingParents:!1},t){case c.z2.AsFirstChild:case c.z2.AsLastChild:case c.z2.SameLevelSibling:case c.z2.NextAtRootLevel:}}d&&o.s.pushAsync({logger:h,run:async()=>{await (0,a.O)(d)}})}catch(e){h.error(e)}finally{h.ge(),n.store.chromeEventListeners.toggleAllListeners(!0)}}},56615:(e,t,r)=>{r.d(t,{Nz:()=>u,Oz:()=>N,Xn:()=>g,Yc:()=>m,fL:()=>y,gZ:()=>C,getChromeCurrentWindowId:()=>w,hK:()=>b,hs:()=>I,ie:()=>h,mR:()=>O,n7:()=>x,zi:()=>p});var a=r(93034),n=r(53775),o=r(87521),i=r(3022),s=r(92935),d=r.n(s);r(24817),r(53233);var l=r(37390),c=r(57866);async function u(e,t=!1){let r=(0,a.tZ)(!0,a.W4.script,[u.name]),n=await chrome.tabs.get(e);try{if(r.gP("Activate tab.",{tabId:e,disableListener:t}),n.active)return r.stop("Tab is already active. Don't need to activate again.",n),!1;t&&o.store.chromeEventListeners.toggleListeners(!1,c.B.TAB_ACTIVATED),await chrome.tabs.update(e,{active:!0}),r.success("Tab activated.",{tabId:e})}catch(e){r.error(e)}finally{t&&o.store.chromeEventListeners.toggleListeners(!0,c.B.TAB_ACTIVATED),r.ge()}return!0}async function g(e){let t=Array.isArray(e)?e:[e];await chrome.tabs.remove(t)}async function h(e,t,r){let n=(0,a.tZ)(!0,a.W4.script,h.name);n.gP({movingTabs:e,toIndex:t}),r&&o.store.chromeEventListeners.toggleAllListeners(!1);try{let r=e.filter(e=>e.index<t).length;for(let a=0;a<e.length;a++){let o=e[a],i=t;o.index<t?(n.log(`Fix moving tab downwards tab will be removed first causing 1 index less in total. movingTabNode.index(${o.index}) < toIndex(${t}), fix ToIndex by toIndex - 1 (${t-1})`),i-=1):i+=a-r,await chrome.tabs.move(o.id,{index:i})}}catch(e){n.errorP(e)}finally{r&&o.store.chromeEventListeners.toggleAllListeners(!0),n.ge()}}async function b(e){var t,r;await p(e,!(null===(t=e.mutedInfo)||void 0===t?void 0:t.muted))}async function p(e,t){await chrome.tabs.update(e.id,{muted:t})}async function m(){try{return await chrome.windows.getCurrent()}catch(e){throw Error(`getChromeCurrentWindow error:. Unable to get current window. Error: ${e.message}`)}}async function w(){try{return(await m()).id}catch(e){throw Error(`getChromeCurrentWindowId error: Unable to get current window id. Error: ${e.message}`)}}async function f(e){let t=(0,a.tZ)(!1,a.W4.script,f.name);t.gP({windowId:e});try{if(e||(t.log("Window is undefined. Get current window id."),e=await w()),!e)throw Error("windowId is undefined.");let r=await chrome.tabs.query({windowId:e});return t.log({chromeTabs:r}),r}catch(e){throw e}finally{t.ge()}}async function v(e){let t=(0,a.tZ)(!1,a.W4.script,v.name);t.gP({windowId:e});try{if(e||(t.log("Window is undefined. Get current window id."),e=await w()),!e)throw Error("windowId is undefined.");let r=await chrome.tabGroups.query({windowId:e});return t.log({chromeGroups:r}),r}catch(e){throw e}finally{t.ge()}}async function I(e){return await Promise.all([f(e),v(e)]).then(([e,t])=>({chromeTabs:e,chromeTabGroups:t}))}async function y(e){return(await chrome.windows.getAll()).some(t=>t.id===e)}var T=function(e){return e.ReplaceNewPageTabWithExtensionPageTabAtBottom="ReplaceNewPageTabWithExtensionPageTabAtBottom",e.ReplaceNewPageTabWithExtensionPageTab="ReplaceNewPageTabWithExtensionPageTab",e.RestoreExtensionTabAtOriginalIndex="RestoreExtensionTabAtOriginalIndex",e}(T||{});async function A(e){let t=(0,a.tZ)(!0,a.W4.action,[A.name]);try{let r;t.gP({tabIds:e});let a=await f(),n=new Set(e);t.log("Grouping tabs by group id.",{tabIdsSet:n});let o=a.reduce((e,t)=>(L(t)&&t.id&&(n.has(t.id)&&(e[t.groupId]||(e[t.groupId]={ungroupingTabs:[],totalTabsCount:0,lastTabIdInGroup:-1}),e[t.groupId].ungroupingTabs.push(t)),e[t.groupId]&&(e[t.groupId].totalTabsCount++,e[t.groupId].lastTabIdInGroup=t.id)),e),{});t.log("Done.",o);let s=d().last(a);for(let a in(!s||L(s))&&(t.log("Last tab is in a group. We have to create a dummy tab at the last that is not in a group, before moving tabs to the last for ungrouping."),r=await chrome.tabs.create({url:i.ru}),t.log("Dummy tab created.",r),r.id&&(await chrome.tabs.move(r.id,{index:-1}),t.log("Dummy tab moved at the last."))),o){let r;let n=parseInt(a);if(isNaN(n)||n===chrome.tabGroups.TAB_GROUP_ID_NONE){t.warn("The first tab's group id is undefined. This should not happen. Check next group.",{tabIds:e});continue}let s=o[n].ungroupingTabs.length===o[n].totalTabsCount;s&&(t.log('All tabs are moving to the group. Create a dummy new tab in the group to prevent "Saved groups are not editable." error when moving out last tab from the group'),r=await chrome.tabs.create({url:i.ru}),t.log("Dummy tab created.",r),r.id&&(await chrome.tabs.group({groupId:n,tabIds:[r.id]}),t.log("Dummy tab grouped.",{groupId:n}))),t.log("Move tab to the last, which will ungroup tab.");for(let e=0;e<o[n].ungroupingTabs.length;e++){let t=o[n].ungroupingTabs[e];t.id&&await chrome.tabs.move(t.id,{index:-1})}(null==r?void 0:r.id)&&await chrome.tabs.remove(r.id),t.log("Move tab to its original places.");let d=o[n].ungroupingTabs.map(e=>e.id?{id:e.id,index:e.index}:void 0).filter(Boolean);if(s)await h(d,d[0].index,!0);else{let e=await chrome.tabs.get(o[n].lastTabIdInGroup);e.id&&await h(d,e.id,!0)}}(null==r?void 0:r.id)&&await chrome.tabs.remove(r.id)}catch(e){throw t.error(e),e}finally{t.ge()}}async function N(e,t,r=!0){let o;let i=(0,a.tZ)(!0,a.W4.script,[N.name]);i.gP({fun:e,tabIds:t}),t=Array.isArray(t)?t:[t];try{try{return await e()}catch(e){if(i.error(e),(0,n.bI)(e))i.log("Failed to execute function. Get the error: Saved groups are not editable. Fall back to move tabs solution."),o=e;else throw e}if(o){try{await A(t)}catch(e){throw o}if(r)return i.log("Try re-executing the function again."),await e()}else i.check("No error. Done.")}catch(e){throw e}finally{i.ge()}}async function x(e,t=!1){let r=(0,a.tZ)(!0,a.W4.action,[x.name]),i=(0,l.eC)(e.tabIds),{groupId:s}=e;r.gP({tabIds:i});try{return t&&o.store.chromeEventListeners.toggleAllListeners(!1),await N(async()=>await chrome.tabs.group({tabIds:i,groupId:s}),i)}catch(e){if(r.error(e),(0,n.bI)(e))throw e}finally{r.ge(),t&&o.store.chromeEventListeners.toggleAllListeners(!0)}}async function C(e,t=!1){let r=(0,a.tZ)(!0,a.W4.script,[C.name]);r.gP({tabIds:e});try{t&&o.store.chromeEventListeners.toggleAllListeners(!1),e=Array.isArray(e)?e:[e],await N(async()=>{await chrome.tabs.ungroup(e)},e,!1)}catch(e){if(r.error(e),(0,n.bI)(e))throw e}finally{r.ge(),t&&o.store.chromeEventListeners.toggleAllListeners(!0)}}function L(e){return e.groupId!==chrome.tabGroups.TAB_GROUP_ID_NONE}function O(e,t){var r,a,n;return null!==(n=(null===(r=e.url)||void 0===r?void 0:r.startsWith(t))||(null===(a=e.pendingUrl)||void 0===a?void 0:a.startsWith(t)))&&void 0!==n&&n}},53775:(e,t,r)=>{r.d(t,{bI:()=>d,wn:()=>l});var a=r(94475),n=r(24817),o=r(79868),i=r(27207);let s="Saved groups are not editable.";function d(e){return e instanceof Error&&e.message===s}function l(e,t){return t instanceof Error?t.message===s?(0,i.FD)(i.FK,{children:["Saved groups are not editable.",(0,i.Y)("a",{rel:"noreferrer",target:"_blank",className:"hover:underline underline ml-2",href:"https://github.com/Able-Bear-Software/tab-nodes-tree/discussions/7",onClick:async t=>{let r=(0,n.Id)(e);r&&(t.preventDefault(),await (0,a.S)("https://github.com/Able-Bear-Software/tab-nodes-tree/discussions/7",o.z2.SameLevelSibling,r))},children:"What is this?"})]}):t.message:t}},2613:(e,t,r)=>{r.d(t,{E:()=>o});var a=r(93034),n=r(24817);function o(e,t){return((0,a.tZ)(!1,a.W4.script,o.name).logP({updateTabIdsRecord:t}),0===Object.keys(t).length)?e:e.map(e=>(function e(t,r){let o;let i=(0,a.tZ)(!1,a.W4.script,e.name);if(i.gP("Checking node.",{"tabNode.title":t.title,"tabNode.id":t.id,node:(0,a.mm)(t)}),0===Object.keys(r).length)return t;if(!(0,n.q8)(t))return i.log("node is not a tab node. Skip"),i.ge(),t;let s=r[t.id];s&&(o=Object.assign(Object.assign({},null!=o?o:structuredClone(t)),{id:s}),i.check("found tab node's id has been replaced, update it",{oldTabNodId:t.id,newTabNodeId:s,newNode:o}));for(let e=0;e<t.directChildrenNodeIds.length;e++){let a=t.directChildrenNodeIds[e];(s=r[a])&&(i.check("tabNode.directChildrenNodeIds has removedTabId, update id to addedTabId",{oldDirectChildrenNodeId:a,newDirectChildrenNodeId:s,newNode:o}),(o=Object.assign({},null!=o?o:structuredClone(t)))&&(o.directChildrenNodeIds[e]=s))}for(let e=0;e<t.ancestralNodeIds.length;e++){let a=t.ancestralNodeIds[e];(s=r[t.ancestralNodeIds[e]])&&(i.check("tabNode.ancestralNodeIds has removedTabId, update id to addedTabId",{oldAncestralNodeId:a,newAncestralNodeId:s,newNode:o}),(o=Object.assign({},null!=o?o:structuredClone(t)))&&(o.ancestralNodeIds[e]=s))}return i.ge(),null!=o?o:t})(e,t))}},24508:(e,t,r)=>{r.d(t,{H:()=>i}),r(56615);var a=r(93034),n=r(37390);r(3735);var o=r(44788);async function i(e,t){let r=(0,a.tZ)(!0,a.W4.script,i.name);r.gP('Save removed tree nodes to "removedTreeNodesStorage."',{removedNodeIds:t});let s=(0,n.ro)(e,"include",t,"id");await (0,o.w)({type:"saveRemovedTreeNodesData",removedNodes:s}),r.log("Done."),r.ge()}}}]);